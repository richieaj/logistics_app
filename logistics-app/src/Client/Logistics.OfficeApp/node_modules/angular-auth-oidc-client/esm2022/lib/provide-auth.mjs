import { makeEnvironmentProviders, } from '@angular/core';
import { createStaticLoader, PASSED_CONFIG, } from './auth-config';
import { StsConfigLoader } from './config/loader/config-loader';
import { AbstractLoggerService } from './logging/abstract-logger.service';
import { ConsoleLoggerService } from './logging/console-logger.service';
import { AbstractSecurityStorage } from './storage/abstract-security-storage';
import { DefaultSessionStorageService } from './storage/default-sessionstorage.service';
export function provideAuth(passedConfig) {
    return makeEnvironmentProviders([..._provideAuth(passedConfig)]);
}
export function _provideAuth(passedConfig) {
    return [
        // Make the PASSED_CONFIG available through injection
        { provide: PASSED_CONFIG, useValue: passedConfig },
        // Create the loader: Either the one getting passed or a static one
        passedConfig?.loader || {
            provide: StsConfigLoader,
            useFactory: createStaticLoader,
            deps: [PASSED_CONFIG],
        },
        {
            provide: AbstractSecurityStorage,
            useClass: DefaultSessionStorageService,
        },
        { provide: AbstractLoggerService, useClass: ConsoleLoggerService },
    ];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZS1hdXRoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvYW5ndWxhci1hdXRoLW9pZGMtY2xpZW50L3NyYy9saWIvcHJvdmlkZS1hdXRoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCx3QkFBd0IsR0FFekIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUNMLGtCQUFrQixFQUNsQixhQUFhLEdBRWQsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQzlFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBRXhGLE1BQU0sVUFBVSxXQUFXLENBQ3pCLFlBQWlDO0lBRWpDLE9BQU8sd0JBQXdCLENBQUMsQ0FBQyxHQUFHLFlBQVksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkUsQ0FBQztBQUVELE1BQU0sVUFBVSxZQUFZLENBQUMsWUFBaUM7SUFDNUQsT0FBTztRQUNMLHFEQUFxRDtRQUNyRCxFQUFFLE9BQU8sRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRTtRQUVsRCxtRUFBbUU7UUFDbkUsWUFBWSxFQUFFLE1BQU0sSUFBSTtZQUN0QixPQUFPLEVBQUUsZUFBZTtZQUN4QixVQUFVLEVBQUUsa0JBQWtCO1lBQzlCLElBQUksRUFBRSxDQUFDLGFBQWEsQ0FBQztTQUN0QjtRQUNEO1lBQ0UsT0FBTyxFQUFFLHVCQUF1QjtZQUNoQyxRQUFRLEVBQUUsNEJBQTRCO1NBQ3ZDO1FBQ0QsRUFBRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsUUFBUSxFQUFFLG9CQUFvQixFQUFFO0tBQ25FLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgRW52aXJvbm1lbnRQcm92aWRlcnMsXG4gIG1ha2VFbnZpcm9ubWVudFByb3ZpZGVycyxcbiAgUHJvdmlkZXIsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgY3JlYXRlU3RhdGljTG9hZGVyLFxuICBQQVNTRURfQ09ORklHLFxuICBQYXNzZWRJbml0aWFsQ29uZmlnLFxufSBmcm9tICcuL2F1dGgtY29uZmlnJztcbmltcG9ydCB7IFN0c0NvbmZpZ0xvYWRlciB9IGZyb20gJy4vY29uZmlnL2xvYWRlci9jb25maWctbG9hZGVyJztcbmltcG9ydCB7IEFic3RyYWN0TG9nZ2VyU2VydmljZSB9IGZyb20gJy4vbG9nZ2luZy9hYnN0cmFjdC1sb2dnZXIuc2VydmljZSc7XG5pbXBvcnQgeyBDb25zb2xlTG9nZ2VyU2VydmljZSB9IGZyb20gJy4vbG9nZ2luZy9jb25zb2xlLWxvZ2dlci5zZXJ2aWNlJztcbmltcG9ydCB7IEFic3RyYWN0U2VjdXJpdHlTdG9yYWdlIH0gZnJvbSAnLi9zdG9yYWdlL2Fic3RyYWN0LXNlY3VyaXR5LXN0b3JhZ2UnO1xuaW1wb3J0IHsgRGVmYXVsdFNlc3Npb25TdG9yYWdlU2VydmljZSB9IGZyb20gJy4vc3RvcmFnZS9kZWZhdWx0LXNlc3Npb25zdG9yYWdlLnNlcnZpY2UnO1xuXG5leHBvcnQgZnVuY3Rpb24gcHJvdmlkZUF1dGgoXG4gIHBhc3NlZENvbmZpZzogUGFzc2VkSW5pdGlhbENvbmZpZ1xuKTogRW52aXJvbm1lbnRQcm92aWRlcnMge1xuICByZXR1cm4gbWFrZUVudmlyb25tZW50UHJvdmlkZXJzKFsuLi5fcHJvdmlkZUF1dGgocGFzc2VkQ29uZmlnKV0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gX3Byb3ZpZGVBdXRoKHBhc3NlZENvbmZpZzogUGFzc2VkSW5pdGlhbENvbmZpZyk6IFByb3ZpZGVyW10ge1xuICByZXR1cm4gW1xuICAgIC8vIE1ha2UgdGhlIFBBU1NFRF9DT05GSUcgYXZhaWxhYmxlIHRocm91Z2ggaW5qZWN0aW9uXG4gICAgeyBwcm92aWRlOiBQQVNTRURfQ09ORklHLCB1c2VWYWx1ZTogcGFzc2VkQ29uZmlnIH0sXG5cbiAgICAvLyBDcmVhdGUgdGhlIGxvYWRlcjogRWl0aGVyIHRoZSBvbmUgZ2V0dGluZyBwYXNzZWQgb3IgYSBzdGF0aWMgb25lXG4gICAgcGFzc2VkQ29uZmlnPy5sb2FkZXIgfHwge1xuICAgICAgcHJvdmlkZTogU3RzQ29uZmlnTG9hZGVyLFxuICAgICAgdXNlRmFjdG9yeTogY3JlYXRlU3RhdGljTG9hZGVyLFxuICAgICAgZGVwczogW1BBU1NFRF9DT05GSUddLFxuICAgIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogQWJzdHJhY3RTZWN1cml0eVN0b3JhZ2UsXG4gICAgICB1c2VDbGFzczogRGVmYXVsdFNlc3Npb25TdG9yYWdlU2VydmljZSxcbiAgICB9LFxuICAgIHsgcHJvdmlkZTogQWJzdHJhY3RMb2dnZXJTZXJ2aWNlLCB1c2VDbGFzczogQ29uc29sZUxvZ2dlclNlcnZpY2UgfSxcbiAgXTtcbn1cbiJdfQ==