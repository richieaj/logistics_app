import { Observable } from 'rxjs';
import { OpenIdConfiguration } from '../config/openid-configuration';
import { LoginResponse } from '../login/login-response';
import * as i0 from "@angular/core";
export declare class CheckAuthService {
    private readonly checkSessionService;
    private readonly currentUrlService;
    private readonly silentRenewService;
    private readonly userService;
    private readonly loggerService;
    private readonly authStateService;
    private readonly callbackService;
    private readonly refreshSessionService;
    private readonly periodicallyTokenCheckService;
    private readonly popupService;
    private readonly autoLoginService;
    private readonly storagePersistenceService;
    private readonly publicEventsService;
    private getConfig;
    checkAuth(configuration: OpenIdConfiguration | null, allConfigs: OpenIdConfiguration[], url?: string): Observable<LoginResponse>;
    checkAuthMultiple(allConfigs: OpenIdConfiguration[], url?: string): Observable<LoginResponse[]>;
    checkAuthIncludingServer(configuration: OpenIdConfiguration | null, allConfigs: OpenIdConfiguration[]): Observable<LoginResponse>;
    private checkAuthWithConfig;
    private startCheckSessionAndValidation;
    private getConfigurationWithUrlState;
    private composeMultipleLoginResults;
    static ɵfac: i0.ɵɵFactoryDeclaration<CheckAuthService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<CheckAuthService>;
}
