import { Observable } from 'rxjs';
import { OpenIdConfiguration } from '../config/openid-configuration';
import { CallbackContext } from '../flows/callback-context';
import { StateValidationResult } from './state-validation-result';
import * as i0 from "@angular/core";
export declare class StateValidationService {
    private readonly storagePersistenceService;
    private readonly tokenValidationService;
    private readonly tokenHelperService;
    private readonly loggerService;
    private readonly equalityService;
    private readonly flowHelper;
    getValidatedStateResult(callbackContext: CallbackContext, configuration: OpenIdConfiguration): Observable<StateValidationResult>;
    private validateState;
    private validateDefault;
    private isIdTokenAfterRefreshTokenRequestValid;
    private handleSuccessfulValidation;
    private handleUnsuccessfulValidation;
    static ɵfac: i0.ɵɵFactoryDeclaration<StateValidationService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<StateValidationService>;
}
