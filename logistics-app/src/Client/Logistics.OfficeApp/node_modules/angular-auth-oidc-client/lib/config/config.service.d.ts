import { Observable } from 'rxjs';
import { OpenIdConfiguration } from './openid-configuration';
import * as i0 from "@angular/core";
export declare class ConfigurationService {
    private readonly loggerService;
    private readonly publicEventsService;
    private readonly storagePersistenceService;
    private readonly platformProvider;
    private readonly authWellKnownService;
    private readonly loader;
    private readonly configValidationService;
    private configsInternal;
    hasManyConfigs(): boolean;
    getAllConfigurations(): OpenIdConfiguration[];
    getOpenIDConfiguration(configId?: string): Observable<OpenIdConfiguration | null>;
    getOpenIDConfigurations(configId?: string): Observable<{
        allConfigs: OpenIdConfiguration[];
        currentConfig: OpenIdConfiguration | null;
    }>;
    hasAtLeastOneConfig(): boolean;
    private saveConfig;
    private loadConfigs;
    private configsAlreadySaved;
    private getConfig;
    private prepareAndSaveConfigs;
    private createUniqueIds;
    private handleConfig;
    private enhanceConfigWithWellKnownEndpoint;
    private prepareConfig;
    private setSpecialCases;
    static ɵfac: i0.ɵɵFactoryDeclaration<ConfigurationService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ConfigurationService>;
}
