import { Observable } from 'rxjs';
import { OpenIdConfiguration } from '../config/openid-configuration';
import { LoginResponse } from '../login/login-response';
import * as i0 from "@angular/core";
export declare const MAX_RETRY_ATTEMPTS = 3;
export declare class RefreshSessionService {
    private readonly flowHelper;
    private readonly flowsDataService;
    private readonly loggerService;
    private readonly silentRenewService;
    private readonly authStateService;
    private readonly authWellKnownService;
    private readonly refreshSessionIframeService;
    private readonly storagePersistenceService;
    private readonly refreshSessionRefreshTokenService;
    private readonly userService;
    userForceRefreshSession(config: OpenIdConfiguration | null, allConfigs: OpenIdConfiguration[], extraCustomParams?: {
        [key: string]: string | number | boolean;
    }): Observable<LoginResponse>;
    forceRefreshSession(config: OpenIdConfiguration, allConfigs: OpenIdConfiguration[], extraCustomParams?: {
        [key: string]: string | number | boolean;
    }): Observable<LoginResponse>;
    private persistCustomParams;
    private startRefreshSession;
    static ɵfac: i0.ɵɵFactoryDeclaration<RefreshSessionService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<RefreshSessionService>;
}
